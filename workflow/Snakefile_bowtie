SAMPLES_DNA, = glob_wildcards('/home/hfm/ER_rumenShotgun/ER_Nanuq/TRIMMED/{sample}_R1_trim.fastq.gz')
SAMPLES_RNA, = glob_wildcards('/home/hfm/Rumen_Microbiome_Genomics/1_Sequences_Guanhui/TRIMMED/{sample}_R1_001_trim.fixed.gz')
#BT2 = '/group/ctbrowngrp2/scratch/annie/2024-cow-rumen/results/bowtie2/DNA/viral_contigs.95.cluster'


rule all:
    input:
        expand("../results/bowtie2/RVDown/mapping_DNA/{sample}.bam", sample=SAMPLES_DNA),
        expand("../results/bowtie2/RVDown/mapping_metaT/{sample}.bam", sample=SAMPLES_RNA),


rule bowtie_d:
    input:
        fw = "/home/hfm/ER_rumenShotgun/ER_Nanuq/TRIMMED/{sample}_R1_trim.fastq.gz", 
        rv = "/home/hfm/ER_rumenShotgun/ER_Nanuq/TRIMMED/{sample}_R2_trim.fastq.gz",
    output:
        samfile = temporary("../results/bowtie2/RVDown/mapping_DNA/{sample}.sam"),
    conda: 
        "bowtie2"
    threads: 8
    shell:
        """
        bowtie2 --threads {threads} \
        -x ../results/bowtie2/ownRVD.95.cluster.bowtie \
        -1 {input.fw} -2 {input.rv} \
        -S {output.samfile} --no-unal --sensitive
        """
rule samtools_d:
    input:
        samfile = "../results/bowtie2/RVDown/mapping_DNA/{sample}.sam",
    output:
        bamfile = "../results/bowtie2/RVDown/mapping_DNA/{sample}.bam",
    conda: 
        "samtools"
    threads: 8
    shell:
        """
        samtools view -@ {threads} -F 4 -bS {input.samfile} | samtools sort > {output.bamfile} && \
        samtools index {output.bamfile} 
        """

rule bowtie_r:
    input:
        fw = "/home/hfm/Rumen_Microbiome_Genomics/1_Sequences_Guanhui/TRIMMED/{sample}_R1_001_trim.fixed.gz", 
        rv = "/home/hfm/Rumen_Microbiome_Genomics/1_Sequences_Guanhui/TRIMMED/{sample}_R2_001_trim.fixed.gz",
    output:
        samfile = temporary("../results/bowtie2/RVDown/mapping_metaT/{sample}.sam"),
    conda: 
        "bowtie2"
    threads: 8
    shell:
        """
        bowtie2 --threads {threads} \
        -x ../results/bowtie2/ownRVD.95.cluster.bowtie \
        -1 {input.fw} -2 {input.rv} \
        -S {output.samfile} --no-unal --sensitive
        """
rule samtools_r:
    input:
        samfile = "../results/bowtie2/RVDown/mapping_metaT/{sample}.sam",
    output:
        bamfile = "../results/bowtie2/RVDown/mapping_metaT/{sample}.bam",
    conda: 
        "samtools"
    threads: 8
    shell:
        """
        samtools view -@ {threads} -F 4 -bS {input.samfile} | samtools sort > {output.bamfile} && \
        samtools index {output.bamfile} 
        """